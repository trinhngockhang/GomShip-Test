{"version":3,"file":"glamorous.umd.tiny.js","sources":["../src/react-compat.js","../src/constants.js","../src/with-theme.js","../src/get-glamor-classname.js","../src/create-glamorous.js","../src/tiny.js"],"sourcesContent":["import React from 'react'\n\nlet PropTypes\n\n/* istanbul ignore next */\nif (parseFloat(React.version.slice(0, 4)) >= 15.5) {\n  /* istanbul ignore next */\n  try {\n    PropTypes = require('prop-types')\n    /* istanbul ignore next */\n  } catch (error) {\n    // ignore\n  }\n}\n/* istanbul ignore next */\nPropTypes = PropTypes || React.PropTypes\n\nexport {PropTypes}\n\n/*\neslint\n  import/no-mutable-exports:0,\n  import/prefer-default-export:0,\n  react/no-deprecated:0\n */\n","export const CHANNEL = '__glamorous__'\n","import React, {Component} from 'react'\n\nimport {CHANNEL} from './constants'\nimport {PropTypes} from './react-compat'\n\nfunction generateWarningMessage(Comp) {\n  const componentName = Comp.displayName || Comp.name || 'FunctionComponent'\n  // eslint-disable-next-line max-len\n  return `glamorous warning: Expected component called \"${componentName}\" which uses withTheme to be within a ThemeProvider but none was found.`\n}\n\nexport default function withTheme(\n  ComponentToTheme,\n  {noWarn = false, createElement = true} = {},\n) {\n  class ThemedComponent extends Component {\n    static propTypes = {\n      theme: PropTypes.object,\n    }\n    warned = noWarn\n    state = {theme: {}}\n    setTheme = theme => this.setState({theme})\n\n    // eslint-disable-next-line complexity\n    componentWillMount() {\n      if (!this.context[CHANNEL]) {\n        if (process.env.NODE_ENV !== 'production' && !this.warned) {\n          this.warned = true\n          // eslint-disable-next-line no-console\n          console.warn(generateWarningMessage(ComponentToTheme))\n        }\n      }\n      const {theme} = this.props\n      if (this.context[CHANNEL]) {\n        // if a theme is provided via props,\n        // it takes precedence over context\n        this.setTheme(theme ? theme : this.context[CHANNEL].getState())\n      } else {\n        this.setTheme(theme || {})\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.props.theme !== nextProps.theme) {\n        this.setTheme(nextProps.theme)\n      }\n    }\n\n    componentDidMount() {\n      if (this.context[CHANNEL] && !this.props.theme) {\n        // subscribe to future theme changes\n        this.subscriptionId = this.context[CHANNEL].subscribe(this.setTheme)\n      }\n    }\n\n    componentWillUnmount() {\n      // cleanup subscription\n      this.subscriptionId &&\n        this.context[CHANNEL].unsubscribe(this.subscriptionId)\n    }\n\n    render() {\n      if (createElement) {\n        return <ComponentToTheme {...this.props} {...this.state} />\n      } else {\n        // this allows us to effectively use the GlamorousComponent\n        // as our `render` method without going through lifecycle hooks.\n        // Also allows us to forward the context in the scenario where\n        // a user wants to add more context.\n        // eslint-disable-next-line babel/new-cap\n        return ComponentToTheme.call(\n          this,\n          {...this.props, ...this.state},\n          this.context,\n        )\n      }\n    }\n  }\n\n  const defaultContextTypes = {\n    [CHANNEL]: PropTypes.object,\n  }\n\n  let userDefinedContextTypes = null\n\n  // configure the contextTypes to be settable by the user,\n  // however also retaining the glamorous channel.\n  Object.defineProperty(ThemedComponent, 'contextTypes', {\n    enumerable: true,\n    configurable: true,\n    set(value) {\n      userDefinedContextTypes = value\n    },\n    get() {\n      // if the user has provided a contextTypes definition,\n      // merge the default context types with the provided ones.\n      if (userDefinedContextTypes) {\n        return {\n          ...defaultContextTypes,\n          ...userDefinedContextTypes,\n        }\n      }\n      return defaultContextTypes\n    },\n  })\n\n  return ThemedComponent\n}\n","import {css} from 'glamor'\n/**\n * This function takes a className string and gets all the\n * associated glamor styles. It's used to merge glamor styles\n * from a className to make sure that specificity is not\n * a problem when passing a className to a component.\n * @param {String} [className=''] the className string\n * @return {Object} { glamorStyles, glamorlessClassName }\n *   - glamorStyles is an array of all the glamor styles objects\n *   - glamorlessClassName is the rest of the className string\n *     without the glamor classNames\n */\nfunction extractGlamorStyles(className) {\n  const glamorlessClassName = []\n  const glamorStyles = []\n  className.toString().split(' ').forEach(name => {\n    if (name.indexOf('css-') === 0) {\n      const style = buildGlamorSrcFromClassName(name)\n      glamorStyles.push(style)\n    } else {\n      glamorlessClassName.push(name)\n    }\n  })\n\n  return {glamorlessClassName, glamorStyles}\n}\n\n/** Glamor's css function returns an object with the shape\n *\n * {\n *   [`data-css-${hash}`]: '',\n *   toString() { return `css-${hash}` }\n * }\n *\n * Whenever glamor's build function encounters an object with\n * this shape it just pulls the resulting styles from the cache.\n *\n * note: the toString method is not needed to qualify the shape\n**/\nfunction buildGlamorSrcFromClassName(className) {\n  return {[`data-${className}`]: ''}\n}\n\nexport default getGlamorClassName\n\nfunction getGlamorClassName({\n  styles,\n  props,\n  cssOverrides,\n  cssProp,\n  context,\n  displayName,\n}) {\n  const {mappedArgs, nonGlamorClassNames} = handleStyles(\n    [...styles, props.className, cssOverrides, cssProp],\n    props,\n    context,\n  )\n  // eslint-disable-next-line max-len\n  const isDev = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV\n  const devRules = isDev ? {label: displayName} : null\n  const glamorClassName = css(devRules, ...mappedArgs).toString()\n  const extras = nonGlamorClassNames.join(' ').trim()\n  return `${glamorClassName} ${extras}`.trim()\n}\n\n// this next function is on a \"hot\" code-path\n// so it's pretty complex to make sure it's fast.\n// eslint-disable-next-line complexity\nfunction handleStyles(styles, props, context) {\n  let current\n  const mappedArgs = []\n  const nonGlamorClassNames = []\n  for (let i = 0; i < styles.length; i++) {\n    current = styles[i]\n    if (typeof current === 'function') {\n      const result = current(props, context)\n      if (typeof result === 'string') {\n        const {glamorStyles, glamorlessClassName} = extractGlamorStyles(result)\n        mappedArgs.push(...glamorStyles)\n        nonGlamorClassNames.push(...glamorlessClassName)\n      } else {\n        mappedArgs.push(result)\n      }\n    } else if (typeof current === 'string') {\n      const {glamorStyles, glamorlessClassName} = extractGlamorStyles(current)\n      mappedArgs.push(...glamorStyles)\n      nonGlamorClassNames.push(...glamorlessClassName)\n    } else if (Array.isArray(current)) {\n      const recursed = handleStyles(current, props, context)\n      mappedArgs.push(...recursed.mappedArgs)\n      nonGlamorClassNames.push(...recursed.nonGlamorClassNames)\n    } else {\n      mappedArgs.push(current)\n    }\n  }\n  return {mappedArgs, nonGlamorClassNames}\n}\n","/*\n * This is a relatively small abstraction that's ripe for open sourcing.\n * Documentation is in the README.md\n */\nimport React from 'react'\nimport {PropTypes} from './react-compat'\nimport withTheme from './with-theme'\nimport getGlamorClassName from './get-glamor-classname'\n\nexport default createGlamorous\n\nfunction createGlamorous(splitProps) {\n  return glamorous\n\n  /**\n  * This is the main export and the function that people\n  * interact with most directly.\n  *\n  * It accepts a component which can be a string or\n  * a React Component and returns\n  * a \"glamorousComponentFactory\"\n  * @param {String|ReactComponent} comp the component to render\n  * @param {Object} options helpful info for the GlamorousComponents\n  * @return {Function} the glamorousComponentFactory\n  */\n  function glamorous(comp, config = {}) {\n    const {\n      rootEl,\n      displayName,\n      shouldClassNameUpdate,\n      forwardProps = [],\n      propsAreCssOverrides = comp.propsAreCssOverrides,\n      withProps: basePropsToApply,\n    } = config\n    Object.assign(glamorousComponentFactory, {withConfig})\n    return glamorousComponentFactory\n\n    function withConfig(newConfig) {\n      return glamorous(comp, {...config, ...newConfig})\n    }\n\n    /**\n     * This returns a React Component that renders the comp (closure)\n     * with a className based on the given glamor styles object(s)\n     * @param {...Object|Function} styles the styles to create with glamor.\n     *   If any of these are functions, they are invoked with the component\n     *   props and the return value is used.\n     * @return {ReactComponent} the ReactComponent function\n     */\n    function glamorousComponentFactory(...styles) {\n      /**\n       * This is a component which will render the comp (closure)\n       * with the glamorous styles (closure). Forwards any valid\n       * props to the underlying component.\n       */\n      const GlamorousComponent = withTheme(\n        function GlamorousInnerComponent(props, context) {\n          props = getPropsToApply(\n            GlamorousComponent.propsToApply,\n            {},\n            props,\n            context,\n          )\n          const updateClassName = shouldUpdate(props, context, this.previous)\n\n          if (shouldClassNameUpdate) {\n            this.previous = {props, context}\n          }\n\n          const {toForward, cssOverrides, cssProp} = splitProps(\n            props,\n            GlamorousComponent,\n          )\n\n          // create className to apply\n          this.className = updateClassName ?\n            getGlamorClassName({\n              styles: GlamorousComponent.styles,\n              props,\n              cssOverrides,\n              cssProp,\n              context,\n              displayName: GlamorousComponent.displayName,\n            }) :\n            this.className\n\n          return React.createElement(GlamorousComponent.comp, {\n            ref: props.innerRef,\n            ...toForward,\n            className: this.className,\n          })\n        },\n        {noWarn: true, createElement: false},\n      )\n\n      GlamorousComponent.propTypes = {\n        className: PropTypes.string,\n        cssOverrides: PropTypes.object,\n        innerRef: PropTypes.func,\n        glam: PropTypes.object,\n      }\n\n      function withComponent(newComp, options = {}) {\n        const {forwardProps: fp, ...componentProperties} = GlamorousComponent\n        return glamorous(\n          {\n            ...componentProperties,\n            comp: newComp,\n          },\n          {\n            // allows the forwardProps to be overridden\n            forwardProps: fp,\n            ...options,\n          },\n        )()\n      }\n\n      function withProps(...propsToApply) {\n        return glamorous(GlamorousComponent, {withProps: propsToApply})()\n      }\n\n      function shouldUpdate(props, context, previous) {\n        // exiting early so components which do not use this\n        // optimization are not penalized by hanging onto\n        // references to previous props and context\n        if (!shouldClassNameUpdate) {\n          return true\n        }\n        let update = true\n        if (previous) {\n          if (\n            !shouldClassNameUpdate(\n              previous.props,\n              props,\n              previous.context,\n              context,\n            )\n          ) {\n            update = false\n          }\n        }\n\n        return update\n      }\n\n      Object.assign(\n        GlamorousComponent,\n        getGlamorousComponentMetadata({\n          comp,\n          styles,\n          rootEl,\n          forwardProps,\n          displayName,\n          propsToApply: basePropsToApply,\n        }),\n        {\n          isGlamorousComponent: true,\n          propsAreCssOverrides,\n          withComponent,\n          withProps,\n          withConfig,\n        },\n      )\n      return GlamorousComponent\n    }\n  }\n\n  function getGlamorousComponentMetadata({\n    comp,\n    styles,\n    rootEl,\n    forwardProps,\n    displayName,\n    propsToApply: basePropsToApply,\n  }) {\n    const componentsComp = comp.comp ? comp.comp : comp\n    const propsToApply = comp.propsToApply ?\n      [...comp.propsToApply, ...arrayify(basePropsToApply)] :\n      arrayify(basePropsToApply)\n    return {\n      // join styles together (for anyone doing: glamorous(glamorous.a({}), {}))\n      styles: when(comp.styles, styles),\n      // keep track of the ultimate rootEl to render (we never\n      // actually render anything but\n      // the base component, even when people wrap a glamorous\n      // component in glamorous\n      comp: componentsComp,\n      rootEl: rootEl || componentsComp,\n      // join forwardProps (for anyone doing: glamorous(glamorous.a({}), {}))\n      forwardProps: when(comp.forwardProps, forwardProps),\n      // set the displayName to something that's slightly more\n      // helpful than `GlamorousComponent` :)\n      displayName: displayName || `glamorous(${getDisplayName(comp)})`,\n      // these are props that should be applied to the component at render time\n      propsToApply,\n    }\n  }\n}\n\n/**\n * reduces the propsToApply given to a single props object\n * @param {Array} propsToApply an array of propsToApply objects:\n *   - object\n *   - array of propsToApply items\n *   - function that accepts the accumulated props and the context\n * @param {Object} accumulator an object to apply props onto\n * @param {Object} props the props that should ultimately take precedence\n * @param {*} context the context object\n * @return {Object} the reduced props\n */\nfunction getPropsToApply(propsToApply, accumulator, props, context) {\n  // using forEach rather than reduce here because the reduce solution\n  // effectively did the same thing because we manipulate the `accumulator`\n  propsToApply.forEach(propsToApplyItem => {\n    if (typeof propsToApplyItem === 'function') {\n      return Object.assign(\n        accumulator,\n        propsToApplyItem(Object.assign({}, accumulator, props), context),\n      )\n    } else if (Array.isArray(propsToApplyItem)) {\n      return Object.assign(\n        accumulator,\n        getPropsToApply(propsToApplyItem, accumulator, props, context),\n      )\n    }\n    return Object.assign(accumulator, propsToApplyItem)\n  })\n  // props wins\n  return Object.assign(accumulator, props)\n}\n\nfunction arrayify(x = []) {\n  return Array.isArray(x) ? x : [x]\n}\n\nfunction when(comp, prop) {\n  return comp ? comp.concat(prop) : prop\n}\n\nfunction getDisplayName(comp) {\n  return typeof comp === 'string' ?\n    comp :\n    comp.displayName || comp.name || 'unknown'\n}\n","/* eslint no-unused-vars:0 */\nimport createGlamorous from './create-glamorous'\n\nfunction splitProps({\n  css: cssProp,\n  // these are plucked off\n  theme, // because they\n  className, // should never\n  innerRef, // be forwarded\n  glam, // to the lower\n  // component ever\n  ...rest\n}) {\n  return {toForward: rest, cssProp}\n}\n\nconst glamorous = createGlamorous(splitProps)\n\nexport default glamorous\n"],"names":["PropTypes","parseFloat","React","version","slice","require","error","CHANNEL","generateWarningMessage","Comp","componentName","displayName","name","withTheme","ComponentToTheme","noWarn","createElement","ThemedComponent","warned","state","theme","setTheme","setState","context","warn","props","getState","nextProps","subscriptionId","subscribe","unsubscribe","call","Component","propTypes","object","defaultContextTypes","userDefinedContextTypes","defineProperty","value","extractGlamorStyles","className","glamorlessClassName","glamorStyles","toString","split","forEach","indexOf","style","buildGlamorSrcFromClassName","push","getGlamorClassName","styles","cssOverrides","cssProp","handleStyles","mappedArgs","nonGlamorClassNames","isDev","devRules","label","glamorClassName","css","extras","join","trim","current","i","length","result","Array","isArray","recursed","createGlamorous","splitProps","glamorous","comp","config","rootEl","shouldClassNameUpdate","forwardProps","propsAreCssOverrides","basePropsToApply","withProps","assign","glamorousComponentFactory","withConfig","newConfig","GlamorousComponent","GlamorousInnerComponent","getPropsToApply","propsToApply","updateClassName","shouldUpdate","previous","toForward","innerRef","string","func","withComponent","newComp","options","fp","componentProperties","update","getGlamorousComponentMetadata","componentsComp","arrayify","when","getDisplayName","accumulator","propsToApplyItem","Object","x","prop","concat","glam","rest"],"mappings":"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"}